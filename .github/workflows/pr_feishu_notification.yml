# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


# https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads#pull_request
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
#
# For pull requests from a forked repository to the base repository, GitHub
# sends the pull_request, issue_comment, pull_request_review_comment,
# pull_request_review, and pull_request_target events to the base repository. No
# pull request events occur on the forked repository.
#
# **ONLY workflow in master branch can handle issue_comment**

---
name: Pull-Request Feishu Notification

on:
  pull_request_target:
    types:
      - assigned
      - unassigned
      - labeled
      - unlabeled
      - opened
      - edited
      - closed
      - reopened
      - synchronize
      - converted_to_draft
      - ready_for_review
      - locked
      - unlocked
      - review_requested
      - review_request_removed
      - auto_merge_enabled
      - auto_merge_disabled

env:
  APP_SERVER: '43.138.9.29:8888'

jobs:
  feishu_notify:
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_CONTEXT: ${{ toJson(github) }}

    steps:
      - name: Pull-Request Comment Notification
        run: |
          action='${{ github.event.action }}'
          server='${{ env.APP_SERVER }}'
          event_name='${{ github.event_name }}'
          context=$(cat <<\EOF | perl -MURI::Escape -pe '$_=uri_escape($_);'
          ${{ env.GITHUB_CONTEXT }}
          EOF
          )

          url="https://${server}/github?action=${action}&event_name=$event_name&context=${context}"
          echo "url=${url}"
          curl -kv -d '{}' "${url}"
